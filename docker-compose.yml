services:
  backup_restore:
    build: ./backup_restore/
    environment:
      - POSTGRES_HOST=wikijs_db
      - POSTGRES_USER=$POSTGRES_USER
      - S3_BUCKET=$S3_BUCKET
      - PGPASSWORD=$POSTGRES_PASSWORD
      - SQLITE_FILE=/db/db.sqlite
    volumes:
      - bibin_data:/db
      - /home/ubuntu/.ssh:/ssh_host

  bibin:
    build: ./bibin/
    restart: unless-stopped
    volumes:
      - bibin_data:/db
    environment:
      - ROCKET_SECRET_KEY=$ROCKET_SECRET_KEY
      - ROCKET_PASSWORD=$ROCKET_PASSWORD
      - ROCKET_MAX_ENTRIES=$ROCKET_MAX_ENTRIES
      - ROCKET_ID_LENGTH=$ROCKET_ID_LENGTH
      - ROCKET_DATABASE_FILE=/db/db.sqlite
      - ROCKET_PREFIX=$ROCKET_PREFIX
      - ROCKET_ADDRESS=0.0.0.0

  faas:
    build: ./faas/
    restart: unless-stopped
    environment:
      - ROCKET_ADDRESS=0.0.0.0
      - ROCKET_URL_PREFIX=https://faas.marache.net/

  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - YAAS_BASICAUTH=$YAAS_BASICAUTH
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - youtube_files:/srv/yaas/files:ro

  wikijs_db:
    image: postgres:11-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: $POSTGRES_USER
    volumes:
      - wikijs_data:/var/lib/postgresql/data
  wikijs:
    image: requarks/wiki:2
    restart: unless-stopped
    depends_on:
      - wikijs_db
    environment:
      DB_TYPE: postgres
      DB_HOST: wikijs_db
      DB_PORT: 5432
      DB_USER: $POSTGRES_USER
      DB_PASS: $POSTGRES_PASSWORD
      DB_NAME: $POSTGRES_DB

  englishify:
    restart: unless-stopped
    build: ./englishify/
    environment:
      OPENAI_API_KEY: $OPENAI_API_KEY
      SENTRY_SDK_URL: $SENTRY_SDK_URL

  yaas:
    restart: unless-stopped
    build: ./yaas/
    links:
      - redis
      - celery
    environment:
      REDIS_URL: "redis://redis:6379/0"
      VIDEO_DIR: "/youtube_files"
    command: flask run --host=0.0.0.0
  redis:
    restart: unless-stopped
    image: redis
  celery:
    restart: unless-stopped
    volumes:
      - youtube_files:/youtube_files
    build: ./yaas/
    command: celery -A tasks worker --loglevel=INFO
    links:
      - redis
    environment:
      REDIS_URL: "redis://redis:6379/0"
      VIDEO_DIR: "/youtube_files"

volumes:
  caddy_data:
    external: true
  caddy_config:
  bibin_data:
    external: true
  wikijs_data:
    external: true
  youtube_files:
    external: true
